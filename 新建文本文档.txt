                        print only branches that don't contain the commit
    --abbrev[=<n>]        use <n> digits to display SHA-1s

Specific git-branch actions:
    -a, --all             list both remote-tracking and local branches
    -d, --delete          delete fully merged branch
    -D                    delete branch (even if not merged)
    -m, --move            move/rename a branch and its reflog
    -M                    move/rename a branch, even if target exists
    -c, --copy            copy a branch and its reflog
    -C                    copy a branch, even if target exists
    --list                list branch names
    -l, --create-reflog   create the branch's reflog
    --edit-description    edit the description for the branch
    -f, --force           force creation, move/rename, deletion
    --merged <commit>     print only branches that are merged
    --no-merged <commit>  print only branches that are not merged
    --column[=<style>]    list branches in columns
    --sort <key>          field name to sort on
    --points-at <object>  print only branches of the object
    -i, --ignore-case     sorting and filtering are case insensitive
    --format <format>     format to use for the output


issuser@DESKTOP-28OFHP7 MINGW64 /d/deviceManage/Try (master)
$ git branch -a
* master
  remotes/origin/HEAD -> origin/master
  remotes/origin/master

issuser@DESKTOP-28OFHP7 MINGW64 /d/deviceManage/Try (master)
$ git checkout -b dev
Switched to a new branch 'dev'

issuser@DESKTOP-28OFHP7 MINGW64 /d/deviceManage/Try (dev)
$ git branch -a
* dev
  master
  remotes/origin/HEAD -> origin/master
  remotes/origin/master

issuser@DESKTOP-28OFHP7 MINGW64 /d/deviceManage/Try (dev)
$ ls
README.md

issuser@DESKTOP-28OFHP7 MINGW64 /d/deviceManage/Try (dev)









jfsofjsosfjsfofsfsffasfjsfosfsfasjflsfjsfosjfs
fsfsafsf
fsfasfasfs
fasfs
fasfasf
afsafasfasgtewth
heryer
y
ergb
sdgsrgyreyh
s
dfgh
h
bsr
yew
t
eg
b
sfhyerueujgwagtaetaetetaetwerywey
